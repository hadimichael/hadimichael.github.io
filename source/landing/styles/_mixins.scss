/* =========================================== *\
 * Mixins
\* =========================================== */

// ==========================================================================
// FONTS
// ==========================================================================

@mixin font-size($px, $lh: false) {
	@if (unitless($px) == false) {
		@error "The font-size mixin expects the first parameter to be a unitless number. `#{$px}` was provided.";
	}

	font-size: #{$px}px;
	font-size: #{$px/$FONT_BASE}rem;

	@if $lh != false {
		@if (unitless($lh) == false) {
			@error "The font-size mixin expects the second parameter to be a unitless number. `#{$lh}` was provided.";
		}

		/* line-height: #{$lh}px; */
		line-height: #{$lh/$px};
	}
}

// ==========================================================================
// PSEUDO-ELEMENT ICONS
// Utilities for pseudo-elements as icons
//
// Example usage:
//
// This example will create a :before pseudo-element and :after pseudo-element.
// The :before pseudo-element will be displayed by default
// The :after pseudo-element will be displayed on hover / focus.
//
// .button > .icon {
//     @include peicon-dual(48px, 48px, left, center, true);
// }
//
// This example will just create a :before psuedo-element, but no :after pseudo-element.
// The :before psuedo-element will have a property of right: 10px;
//
// .button > .icon:before {
//     @include peicon-content(48px, 48px, none, center) {
//         right: 10px;
//     }
// }
//
// ==========================================================================

@mixin peicon($width: 48px, $height: 48px, $xPos: none, $yPos: none) {
	width: $width;
	height: $height;
	display: block;
	background-position: 50% 50%;

	// Position absolutely if valid position values are provided
	@if ($xPos != none or $yPos != none) {
		position: absolute;
	}

	// Icon left position
	@if ($xPos == left) {
		left: 0;
	} @else if ($xPos == center) {
		left: 50%;
		margin-left: ceil($width / 2) * -1;
	} @else if ($xPos == right) {
		right: 0;
	} @else if ($xPos != none) {
		left: $xPos;
	}

	// Icon top position
	@if ($yPos == top) {
		top: 0;
	} @else if ($yPos == center) {
		top: 50%;
		margin-top: ceil($height / 2) * -1;
	} @else if ($yPos == bottom) {
		bottom: 0;
	} @else if ($yPos != none) {
		top: $yPos;
	}

	@content;
}

@mixin peicon-content($width: 48px, $height: 48px, $xPos: none, $yPos: none) {
	content: "";
	@include peicon($width, $height, $xPos, $yPos) {
		@content;
	}
}

@mixin peicon-dual-active() {
	&:before {
		opacity: 0;

		.lt-ie9 & {
			display: none;
			content: " ";
		}
	}

	&:after {
		opacity: 1;

		.lt-ie9 & {
			display: block;
			content: " ";
		}
	}
}

@mixin peicon-dual($width: 48px, $height: 48px, $xPos: none, $yPos: none, $activeOnHover: false, $duration: 250ms) {
	&:before,
	&:after {
		@include peicon-content($width, $height, $xPos, $yPos) {
			@content;
		}
		transition: opacity $duration ease-in-out;
	}

	&:before {
		opacity: 1;

		.lt-ie9 & {
			display: block;
		}
	}

	&:after {
		opacity: 0;

		.lt-ie9 & {
			display: none;
		}
	}

	@if $activeOnHover {
		&:hover,
		&:focus,
		&:active {
			@include peicon-dual-active();
		}
	}
}
